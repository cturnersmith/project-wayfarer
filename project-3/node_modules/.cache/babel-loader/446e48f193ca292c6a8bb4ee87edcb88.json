{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cmt3902\\\\CFG\\\\week9\\\\project3\\\\Front-end\\\\project-wayfarer\\\\project-3\\\\src\\\\Components\\\\EditProfile.js\";\nimport React, { useRef, useState } from \"react\";\nimport EditProfile from \"./EditProfile\";\n\nfunction App() {\n  /* \r\n    1. create a reference using use reference and add the ref={inputRef} to input element\r\n    2. pass this reference to the Editable component, use different name than ref, I used `childRef`. Its basically a normal prop carrying the input element reference.\r\n  */\n  const inputRef = useRef();\n  return /*#__PURE__*/React.createElement(Editable, {\n    text: task,\n    placeholder: \"Write a task name\",\n    childRef: inputRef,\n    type: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    type: \"text\",\n    name: \"task\",\n    placeholder: \"Write a task name\",\n    value: task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/cmt3902/CFG/week9/project3/Front-end/project-wayfarer/project-3/src/Components/EditProfile.js"],"names":["React","useRef","useState","EditProfile","App","inputRef","task"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,SAASC,GAAT,GAAe;AACb;;;;AAIA,QAAMC,QAAQ,GAAGJ,MAAM,EAAvB;AAEA,sBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEK,IADR;AAEE,IAAA,WAAW,EAAC,mBAFd;AAGE,IAAA,QAAQ,EAAED,QAHZ;AAIE,IAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AACE,IAAA,GAAG,EAAEA,QADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,mBAJd;AAKE,IAAA,KAAK,EAAEC,IALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAiBD;;AACD,eAAeF,GAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport EditProfile from \"./EditProfile\";\r\n\r\n\r\nfunction App() {\r\n  /* \r\n    1. create a reference using use reference and add the ref={inputRef} to input element\r\n    2. pass this reference to the Editable component, use different name than ref, I used `childRef`. Its basically a normal prop carrying the input element reference.\r\n  */\r\n  const inputRef = useRef();\r\n\r\n  return (\r\n    <Editable\r\n      text={task}\r\n      placeholder=\"Write a task name\"\r\n      childRef={inputRef}\r\n      type=\"input\"\r\n    >\r\n      <input\r\n        ref={inputRef}\r\n        type=\"text\"\r\n        name=\"task\"\r\n        placeholder=\"Write a task name\"\r\n        value={task}\r\n    \r\n      />\r\n    </Editable>\r\n  );\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}