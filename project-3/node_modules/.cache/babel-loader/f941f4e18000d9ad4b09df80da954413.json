{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cmt3902\\\\CFG\\\\week9\\\\project3\\\\Front-end\\\\project-wayfarer\\\\project-3\\\\src\\\\Components\\\\Posts\\\\PostContainer.js\";\nimport React, { Component } from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport { postPost, indexCities, destroyPost, putPost } from '../../services/api_helper';\nimport CreatePostForm from './CreatePostForm';\nimport UpdatePostForm from './UpdatePostForm';\nimport Cities from './Cities';\nimport { render } from 'react-dom';\n\nclass PostContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createPost = async (e, postData) => {\n      e.preventdefault();\n      const newPost = await postPost(postData);\n      const posts = this.state.posts;\n      posts.push(newPost.data);\n      this.setState({\n        posts: posts\n      });\n    };\n\n    this.updatePost = async (event, id, values) => {\n      event.preventDefault();\n      const updatePost = await putPost(id, values);\n      const allPosts = this.state.posts;\n      const editedPosts = allPosts.map(post => {\n        return post.id === parseInt(id) ? updatePost : post;\n      });\n      this.setState({\n        posts: editedPosts\n      });\n      this.props.history.push('/posts');\n    };\n\n    this.getCities = async () => {\n      const allCities = await indexCities();\n      this.setState({\n        cities: allCities\n      });\n    };\n\n    this.state = {\n      posts: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CreatePostForm, {\n      handleSubmit: this.createPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/posts/:id/edit\",\n      render: props => {\n        return /*#__PURE__*/React.createElement(UpdatePostForm, {\n          posts: this.state.posts,\n          updatePost: this.updatePost,\n          postId: props.match.params.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Cities, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(PostContainer);","map":{"version":3,"sources":["C:/Users/cmt3902/CFG/week9/project3/Front-end/project-wayfarer/project-3/src/Components/Posts/PostContainer.js"],"names":["React","Component","Route","withRouter","postPost","indexCities","destroyPost","putPost","CreatePostForm","UpdatePostForm","Cities","render","PostContainer","constructor","props","createPost","e","postData","preventdefault","newPost","posts","state","push","data","setState","updatePost","event","id","values","preventDefault","allPosts","editedPosts","map","post","parseInt","history","getCities","allCities","cities","match","params"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,kBAAlC;AACA,SAAQC,QAAR,EAAkBC,WAAlB,EAA+BC,WAA/B,EAA4CC,OAA5C,QAA0D,2BAA1D;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,aAAN,SAA4BX,SAA5B,CAAsC;AAClCY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQvBC,UARuB,GAQV,OAAOC,CAAP,EAAUC,QAAV,KAAuB;AAChCD,MAAAA,CAAC,CAACE,cAAF;AACA,YAAMC,OAAO,GAAG,MAAMf,QAAQ,CAACa,QAAD,CAA9B;AACA,YAAMG,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAzB;AACAA,MAAAA,KAAK,CAACE,IAAN,CAAWH,OAAO,CAACI,IAAnB;AACA,WAAKC,QAAL,CAAc;AACVJ,QAAAA,KAAK,EAAEA;AADG,OAAd;AAGH,KAhBsB;;AAAA,SAkBvBK,UAlBuB,GAkBV,OAAOC,KAAP,EAAcC,EAAd,EAAkBC,MAAlB,KAA6B;AACtCF,MAAAA,KAAK,CAACG,cAAN;AACA,YAAMJ,UAAU,GAAG,MAAMlB,OAAO,CAAEoB,EAAF,EAAMC,MAAN,CAAhC;AACA,YAAME,QAAQ,GAAG,KAAKT,KAAL,CAAWD,KAA5B;AACA,YAAMW,WAAW,GAAGD,QAAQ,CAACE,GAAT,CAAaC,IAAI,IAAI;AACrC,eAAOA,IAAI,CAACN,EAAL,KAAYO,QAAQ,CAACP,EAAD,CAApB,GAA2BF,UAA3B,GAAuCQ,IAA9C;AACH,OAFmB,CAApB;AAGA,WAAKT,QAAL,CAAc;AACVJ,QAAAA,KAAK,EAAEW;AADG,OAAd;AAGA,WAAKjB,KAAL,CAAWqB,OAAX,CAAmBb,IAAnB,CAAwB,QAAxB;AACH,KA7BsB;;AAAA,SA+BvBc,SA/BuB,GA+BX,YAAY;AACpB,YAAMC,SAAS,GAAG,MAAMhC,WAAW,EAAnC;AACI,WAAKmB,QAAL,CAAc;AACVc,QAAAA,MAAM,EAAED;AADE,OAAd;AAGP,KApCsB;;AAGf,SAAKhB,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAgCLT,EAAAA,MAAM,GAAG;AACL,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,cAAD;AAAgB,MAAA,YAAY,EAAE,KAAKI,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,iBAAZ;AAA8B,MAAA,MAAM,EAAGD,KAAD,IAAW;AACjD,4BAAM,oBAAC,cAAD;AACN,UAAA,KAAK,EAAE,KAAKO,KAAL,CAAWD,KADZ;AAEN,UAAA,UAAU,EAAE,KAAKK,UAFX;AAGN,UAAA,MAAM,EAAEX,KAAK,CAACyB,KAAN,CAAYC,MAAZ,CAAmBb,EAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AAKH,OANG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAUA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVA,CADA;AAeH;;AAvDqC;;AA0DtC,eAAexB,UAAU,CAAES,aAAF,CAAzB","sourcesContent":["import React, {Component} from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport {postPost, indexCities, destroyPost, putPost} from '../../services/api_helper';\r\n\r\nimport CreatePostForm from './CreatePostForm';\r\nimport UpdatePostForm from './UpdatePostForm';\r\nimport Cities from './Cities';\r\nimport { render } from 'react-dom';\r\n\r\nclass PostContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            posts: []\r\n        }\r\n    }\r\n\r\ncreatePost = async (e, postData) => {\r\n    e.preventdefault();\r\n    const newPost = await postPost(postData);\r\n    const posts = this.state.posts;\r\n    posts.push(newPost.data);\r\n    this.setState({\r\n        posts: posts\r\n    })\r\n}\r\n\r\nupdatePost = async (event, id, values) => {\r\n    event.preventDefault();\r\n    const updatePost = await putPost (id, values);\r\n    const allPosts = this.state.posts;\r\n    const editedPosts = allPosts.map(post => {\r\n        return post.id === parseInt(id) ? updatePost: post\r\n    })\r\n    this.setState({\r\n        posts: editedPosts\r\n    })\r\n    this.props.history.push('/posts');\r\n}\r\n\r\ngetCities = async () => {\r\n    const allCities = await indexCities();\r\n        this.setState({\r\n            cities: allCities\r\n        })\r\n}\r\n\r\nrender() {\r\n    return(\r\n    <div>\r\n        <CreatePostForm handleSubmit={this.createPost} /> \r\n        \r\n        <Route path=\"/posts/:id/edit\" render={(props) => {\r\n        return<UpdatePostForm\r\n        posts={this.state.posts}\r\n        updatePost={this.updatePost}\r\n        postId={props.match.params.id}\r\n        />\r\n    }} />\r\n    <Cities />\r\n    </div>\r\n\r\n    ) \r\n}\r\n}\r\n\r\nexport default withRouter (PostContainer);"]},"metadata":{},"sourceType":"module"}