{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cmt3902\\\\CFG\\\\week9\\\\project3\\\\Front-end\\\\project-wayfarer\\\\project-3\\\\src\\\\Components\\\\Posts\\\\PostContainer.js\";\nimport React, { Component } from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport { postPost, indexCities, destroyPost, putPost, getCityPosts } from '../../services/api_helper';\nimport CreatePostForm from './CreatePostForm';\nimport UpdatePostForm from './UpdatePostForm';\nimport Cities from './Cities';\nimport PostList from './PostList';\nimport SinglePost from './SinglePost';\n\nclass PostContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createPost = async (e, postData) => {\n      console.log(postData);\n      e.preventDefault();\n      const newPost = await postPost(this.state.cityId, postData);\n      const posts = this.state.posts;\n      posts.push(newPost.data);\n      this.setState({\n        posts: posts\n      });\n    };\n\n    this.updatePost = async (event, id, values) => {\n      event.preventDefault();\n      const updatePost = await putPost(id, values);\n      const allPosts = this.state.posts;\n      const editedPosts = allPosts.map(post => {\n        return post.id === parseInt(id) ? updatePost : post;\n      });\n      this.setState({\n        posts: editedPosts\n      });\n      this.props.history.push('/posts');\n    };\n\n    this.destroyPost = async id => {\n      await destroyPost(id);\n      const allPosts = this.state.posts;\n      const remainingPosts = allPosts.filter(post => {\n        return post.id !== id;\n      });\n      this.setState({\n        posts: remainingPosts\n      });\n      this.props.history.push('/posts');\n    };\n\n    this.handleCityClick = async cityId => {\n      console.log(cityId);\n      const posts = await getCityPosts(cityId);\n      this.setState({\n        cityId: cityId,\n        posts: posts.Posts\n      });\n    };\n\n    this.state = {\n      posts: [],\n      cityId: null,\n      cities: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/posts/:id/edit\",\n      render: props => {\n        return /*#__PURE__*/React.createElement(UpdatePostForm, {\n          posts: this.state.posts,\n          updatePost: this.updatePost,\n          postId: props.match.params.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Cities, {\n      handleCityClick: this.handleCityClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/posts\",\n      render: () => /*#__PURE__*/React.createElement(PostList, {\n        posts: this.state.posts,\n        cityId: this.state.cityId,\n        createPost: this.createPost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/posts/:id\",\n      render: props => {\n        return /*#__PURE__*/React.createElement(SinglePost, {\n          posts: this.state.posts,\n          postId: props.match.params.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 16\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(PostContainer);","map":{"version":3,"sources":["C:/Users/cmt3902/CFG/week9/project3/Front-end/project-wayfarer/project-3/src/Components/Posts/PostContainer.js"],"names":["React","Component","Route","withRouter","postPost","indexCities","destroyPost","putPost","getCityPosts","CreatePostForm","UpdatePostForm","Cities","PostList","SinglePost","PostContainer","constructor","props","createPost","e","postData","console","log","preventDefault","newPost","state","cityId","posts","push","data","setState","updatePost","event","id","values","allPosts","editedPosts","map","post","parseInt","history","remainingPosts","filter","handleCityClick","Posts","cities","render","match","params"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport {postPost, indexCities, destroyPost, putPost, getCityPosts} from '../../services/api_helper';\r\n\r\nimport CreatePostForm from './CreatePostForm';\r\nimport UpdatePostForm from './UpdatePostForm';\r\nimport Cities from './Cities';\r\nimport PostList from './PostList';\r\nimport SinglePost from './SinglePost';\r\n\r\n\r\n\r\n\r\nclass PostContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            posts: [],\r\n            cityId: null,\r\n            cities: []\r\n        }\r\n    }\r\n\r\ncreatePost = async (e, postData) => {\r\n    console.log(postData);\r\n    e.preventDefault();\r\n    const newPost = await postPost(this.state.cityId, postData);\r\n    const posts = this.state.posts;\r\n    posts.push(newPost.data);\r\n    this.setState({\r\n        posts: posts\r\n    })\r\n}\r\n\r\nupdatePost = async (event, id, values) => {\r\n    event.preventDefault();\r\n    const updatePost = await putPost (id, values);\r\n    const allPosts = this.state.posts;\r\n    const editedPosts = allPosts.map(post => {\r\n        return post.id === parseInt(id) ? updatePost: post\r\n    })\r\n    this.setState({\r\n        posts: editedPosts\r\n    })\r\n    this.props.history.push('/posts');\r\n}\r\n\r\ndestroyPost = async (id) => {\r\n    await destroyPost(id);\r\n    const allPosts = this.state.posts;\r\n    const remainingPosts = allPosts.filter(post => {\r\n        return post.id !== id\r\n    })\r\n    this.setState({\r\n        posts: remainingPosts\r\n    })\r\n    this.props.history.push('/posts');\r\n}\r\n\r\nhandleCityClick = async(cityId) => {\r\n    console.log(cityId);\r\n    const posts = await getCityPosts(cityId)\r\n    this.setState({\r\n        cityId: cityId,\r\n        posts:posts.Posts\r\n\r\n    })\r\n}\r\n\r\n\r\n\r\nrender() {\r\n    return(\r\n    <div>\r\n        <Route path=\"/posts/:id/edit\" render={(props) => {\r\n        return<UpdatePostForm\r\n        posts={this.state.posts}\r\n        updatePost={this.updatePost}\r\n        postId={props.match.params.id}\r\n        />\r\n    }} />\r\n    <Cities handleCityClick={this.handleCityClick}/>\r\n    <Route exact path = '/posts' render={() =>(\r\n        <PostList posts={this.state.posts} cityId={this.state.cityId} createPost={this.createPost} /> \r\n    \r\n    )}/>\r\n\r\n    <Route path = '/posts/:id' render={(props) =>{\r\n        return <SinglePost\r\n        posts={this.state.posts} postId={props.match.params.id} />\r\n            }} /> \r\n    </div>\r\n\r\n    ) \r\n}\r\n}\r\n\r\nexport default withRouter (PostContainer);"]},"metadata":{},"sourceType":"module"}